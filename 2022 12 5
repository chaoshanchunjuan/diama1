//#include <stdio.h>
//#include <math.h>
//#include<time.h>
//#pragma warning (disable:4996)
//
//void print(int k);
//
//
//int main()
//{
//	while (1)
//	{
//		int q = 0;
//		scanf("%d", &q);
//		int sum = 0;
//		while (q != 0)
//		{
//			int n = q % 10;
//			q = q / 10;
//			sum = n + sum;
//		}
//		/*while (sum != 0)
//		{
//			int l=
//			print(l);
//		}*/
//		//int n = 0;
//		//print(sum);
//		//写循环求各个位
//		//while (sum != 0)
//		//{
//		//	sum /= 10;
//		//}
//
//		char arr[10000];
//		for (int l = 0; l < 10000; l++)
//		{
//			arr[l] = 0;
//		}
//		int i = 0;
//		int count = 0;
//		while (sum != 0)
//		{
//			arr[i] = sum % 10;
//			sum = sum / 10;
//			i++;
//			count++;
//		}
//		for (int i = 0; i < count; i++)
//		{
//			printf("%d", arr[i]);
//		}
//		printf("\n");
//		printf("count=%d\n", count);
//		printf("sum=%d", sum);
//		for (int j = count - 1; j >= 0; j--)
//		{
//			switch (arr[j])
//			{
//			case 0:printf("ling"); break;
//			case 1:printf("yi"); break;
//			case 2:printf("er"); break;
//			case 3:printf("san"); break;
//			case 4:printf("si"); break;
//			case 5:printf("wu"); break;
//			case 6:printf("liu"); break;
//			case 7:printf("qi"); break;
//			case 8:printf("ba"); break;
//			case 9:printf("jiu"); break;
//			}
//			if (j != 0)
//			{
//				printf(" ");
//			}
//		}
//
//		if (count == 0)
//		{
//			printf("ling");
//		}
//		printf("\n");
//	}
//
//
//
//
//
//
//
//
//
//
//	return 0;
//}

//void print(int k)
//{
//	////n = k / 10;
//	//k = k / 10;
//	//if (k!= 0)
//	//{
//	//	print(k);
//	//}
//	//else
//	//{
//
//	//}
//
//
//}r



#include <stdio.h>
#pragma warning(disable:4996)
#include <math.h>

int main()
{


		//char str[999];
		//char stro[10][5] = { "ling","yi","er","san","si","wu","liu","qi","ba","jiu" };//使用二维数组定义字符串数组
		//int i=0,j=0,sum=0,a;
		//int sumo[999];
		//scanf("%s",str);
		//for (i; str[i] != '\0'; i++)
		//{
		//	sum += (str[i] - '0');
		//}
		//i=0;
		//while (sum != 0)
		//{
		//	sumo[i] = sum % 10;
		//	sum /= 10;
		//	i++;
		//}
		//i--;
		//a = i;/*a用于for循环限定循环次数，而i用于位数的递减*/
		//for (j = 0; j <= a; j++, i--)
		//{
		//	printf("%s", stro[sumo[i]]);/*sumo[i]是先输出最大位，而sumo[i]的值正好对应stro[][]中的拼音*/
		//	if (j != a)printf(" ");
		//}





	//char n[100];
	//scanf("%s", n);
	//char arr[999];
	//for (int i = 0; i < 999; i++)
	//{
	//	arr[i] = 0;
	//}
	//int sum = 0;

	//while (n != 0)//求总和
	//{
	//	sum = sum + n % 10;
	//	n /= 10;
	//}
	///*{
	//	printf("%d", sum);
	//}*/
	//int count = 1;
	//for (int i = 0;; i++)
	//{
	//	arr[i] = sum % 10;
	//	sum /= 10;
	//	if (sum == 0)
	//	{
	//		break;
	//	}
	//	else
	//	{
	//		count++;
	//	}
	//}
	//for (int j = count - 1; j >= 0; j--)
	//{
	//	switch (arr[j])
	//	{
	//	case 0:printf("ling"); break;
	//	case 1:printf("yi"); break;
	//	case 2:printf("er"); break;
	//	case 3:printf("san"); break;
	//	case 4:printf("si"); break;
	//	case 5:printf("wu"); break;
	//	case 6:printf("liu"); break;
	//	case 7:printf("qi"); break;
	//	case 8:printf("ba"); break;
	//	case 9:printf("jiu"); break;
	//	}
	//	if (j != 0)
	//	{
	//		printf(" ");
	//	}
	//}

	char str[100];
	scanf("%s",str);
	char sum = 0;
	char str2[999];
	for (int j = 0; j < 999; j++)
	{
		str2[j] = 0;
	}
	for (int i = 0; str[i]!='\0'; i++)
	{
		sum = sum + str[i]-'0';
	}
	int k = 0;
	int count = 1;
    while(sum!=0)
	{
		str[k] = sum % 10;
		sum /= 10;
		k++;
		count++;
	}

	 for (int j = count - 1; j >= 0; j--)
		{
			switch (str[j])
			{
			case 0:printf("ling"); break;
			case 1:printf("yi"); break;
			case 2:printf("er"); break;
			case 3:printf("san"); break;
			case 4:printf("si"); break;
			case 5:printf("wu"); break;
			case 6:printf("liu"); break;
			case 7:printf("qi"); break;
			case 8:printf("ba"); break;
			case 9:printf("jiu"); break;
			}
			if (j != 0)
			{
				printf(" ");
			}
		}

	return 0;
}
